import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

String getVersionString() {
    String v = VERSION_NAME.replaceAll(".(0)\$", "." + buildNumber())
    v = isTag() ? v : v + "-SNAPSHOT"
    return v
}

group = GROUP
version = getVersionString()

if (isReleaseBuild()) {
    status = 'release'
} else {
    status = 'integration'
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    // call regular ndk-build(.cmd) script from app directory
    task ndkBuild(type: Exec) {
        commandLine getNdkBuildFile().absolutePath, '-C', file('src/main').absolutePath
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project.depAndroidSupport
    compile project.depSupportAnnotations

    compile project(':rajawali')
}

File getNdkBuildFile() {
    String name = Os.isFamily(Os.FAMILY_WINDOWS) ? 'ndk-build.cmd' : 'ndk-build'
    File ndkDir = android.getNdkDirectory()
    return new File(ndkDir, name)
}

apply from: '../maven_push.gradle'
